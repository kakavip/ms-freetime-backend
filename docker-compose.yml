version: "3.7"

services:
  ms-mysql-db:
    container_name: ms-mysql-db
    build: ./database
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    volumes:
      - mysql_data:/var/lib/mysql
    ports:
      - ${MYSQL_DATABASE_PORT}:3306
    command: mysqld --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    networks:
      - ms-freetime-network
  ms-mongo-db:
    image: mongo:4.2.7
    container_name: ms-mongo-db
    # restart: always
    volumes:
      - mongo_data:/data/db
    ports:
      - ${MONGO_DATABASE_PORT}:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${ANALYTIC_DATA_SERVICE_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${ANALYTIC_DATA_SERVICE_PASSWORD}
      MONGO_INITDB_DATABASE: ${ANALYTIC_DATA_SERVICE_DB}
    networks:
      - ms-freetime-network

  analytic-data-service:
    container_name: ms-analytic-data-service
    restart: always
    build: ./analytic-data-service
    command: run --reload --allow-net --allow-read --allow-write --allow-env --unstable -c tsconfig.json app.ts
    environment:
      ANALYTIC_DB_USER: ${ANALYTIC_DATA_SERVICE_USER}
      ANALYTIC_DB_NAME: ${ANALYTIC_DATA_SERVICE_DB}
      ANALYTIC_DB_PASSWORD: ${ANALYTIC_DATA_SERVICE_PASSWORD}
      # ANALYTIC_DB_PORT: ${ANALYTIC_DATA_SERVICE_DB_PORT}
      # ANALYTIC_DB_HOST: ${ANALYTIC_DATA_SERVICE_HOST}
      ANALYTIC_DB_PORT: 3306
      ANALYTIC_DB_HOST: ms-mysql-db
    volumes:
      - ./analytic-data-service:/usr/app
    ports:
      - ${ANALYTIC_DATA_SERVICE_PORT}:3000
    depends_on:
      - ms-mysql-db
    networks:
      - ms-freetime-network

  ms-core-service:
    container_name: ms-core-service
    build: ./ms-core-service
    command: bash -c "rm -f tmp/pids/server.pid && bundle exec rails s -p 3000 -b '0.0.0.0'"
    volumes:
      - ./ms-core-service:/myapp
    ports:
      - ${MS_CORE_SERVICE_PORT}:3000
    depends_on:
      - ms-mysql-db
    networks:
      - ms-freetime-network

  ms-php-myadmin:
    container_name: ms-php-myadmin
    image: phpmyadmin/phpmyadmin
    environment:
      PMA_HOST: ms-mysql-db
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    ports:
      - ${MS_PHP_MYADMIN_PORT}:80
    networks:
      - ms-freetime-network
    depends_on:
      - ms-mysql-db

  ms-cms:
    container_name: ms-cms
    build:
      context: ./ms-cms
      dockerfile: Dockerfile
      args:
        - REACT_APP_ANALYTIC_BACKEND_API=${ANALYTIC_BACKEND_API}
    ports:
      - ${MS_CMS_PORT}:5000
    networks:
      - ms-freetime-network
    environment:
      NODE_ENV: development
    volumes:
      - ./ms-cms:/usr/app
    depends_on:
      - analytic-data-service

  data-science-service:
    container_name: data-science-service
    build: ./data-science-service
    volumes:
      - ./data-science-service:/code
    ports:
      - ${DATA_SCIENCE_SERVICE_PORT}:8000
    depends_on:
      - ms-mysql-db
    networks:
      - ms-freetime-network
    command: bash -c "uvicorn main:app --host 0.0.0.0 --port 8000 --reload"

networks:
  ms-freetime-network:
    driver: overlay
    attachable: true

volumes:
  mysql_data:
  mongo_data:
